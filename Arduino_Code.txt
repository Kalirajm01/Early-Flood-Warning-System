#include <SimpleDHT.h>
#include <SoftwareSerial.h>
SoftwareSerial ss(12,11);
#include <Ultrasonic.h>
#include <LiquidCrystal.h>
LiquidCrystal lcd(4, 5, 6, 7, 8, 9);
unsigned int temperaturesensor; 
Ultrasonic ultrasonic(A1, A2);
int distance;

#define pump 13
#define key A3
int pinDHT11 = A0;
SimpleDHT11 dht11;



volatile int flow_frequency; // Measures flow sensor pulses
// Calculated litres/hour
float vol = 0.0,l_minute;
unsigned char flowsensor = 2; // Sensor Input
unsigned long currentTime;
unsigned long cloopTime;

void waterflow_measurement();
void gsm_init();
void msg1();
void msg2();
void lcd_decimal3(unsigned char,unsigned char,int);
int a=0,b=0;
 byte temperature = 0;
 byte humidity = 0;
void flow () // Interrupt function
{
   flow_frequency++;
}
void setup()
{
  lcd.begin(20, 4);
  Serial.begin(9600);
  ss.begin(9600);
  pinMode(flowsensor, INPUT);
  digitalWrite(flowsensor, HIGH); // Optional Internal Pull-Up
  pinMode(key, INPUT_PULLUP);
  pinMode(pump,OUTPUT);
  digitalWrite(pump,LOW);
  lcd.setCursor(0,1);
  lcd.print("    EARLY FLOOD     ");
  lcd.setCursor(0,2);
  lcd.print("  WARNING SYSTEM    ");
  delay(3000);
  lcd.clear();
    /*The Hall-effect sensor is connected to pin 2 which uses interrupt 0. Configured to trigger on a FALLING state change (transition from HIGH
  (state to LOW state)*/
   attachInterrupt(digitalPinToInterrupt(flowsensor), flow, RISING); // Setup Interrupt
   currentTime = millis();
   cloopTime = currentTime;
   gsm_init();
    lcd.clear();
}

void loop()
{ 
  currentTime = millis();
  waterflow_measurement();
  distance = ultrasonic.read();
  
 //  byte temperature = 0;
 //  byte humidity = 0;
   
  int err = SimpleDHTErrSuccess;
  if ((err = dht11.read(pinDHT11, &temperature, &humidity, NULL)) != SimpleDHTErrSuccess) {
  //  Serial.print("Read DHT11 failed, err="); Serial.println(err);delay(1000);
    return;
  }
   
          lcd.setCursor(0,0);
          lcd.print("T:");
          lcd_decimal3(2,0,temperature);
          lcd.setCursor(6,0);
          lcd.print("H:");
          lcd_decimal3(8,0,humidity);
          lcd.setCursor(0,2);
          lcd.print("DISTANCE:");
          lcd_decimal3(9,2,distance);
          lcd.setCursor(0,3);
          lcd.print("WATER LEVEL NORMAL ");
 
           Serial.print("TEMPERATURE:");Serial.println((int)temperature); 
       Serial.print("HUMIDITY:");Serial.println((int)humidity);  
   if(digitalRead(key)==LOW && distance>5)
     {
         digitalWrite(pump, HIGH);
     }
   else if(distance<5 && b==1)
     {
         digitalWrite(pump, LOW);b=0;if(a==1){a=0;msg1();msg2();}
     }
     else
     {
       a=1;
     }
    if(distance>5){b=1;}
//    waterflow_measurement();
}
void waterflow_measurement()
{
if(currentTime >= (cloopTime + 1000))
   {
    cloopTime = currentTime; // Updates cloopTime
    if(flow_frequency != 0){
      // Pulse frequency (Hz) = 7.5Q, Q is flow rate in L/min.
      l_minute = (flow_frequency / 7.5); // (Pulse frequency x 60 min) / 7.5Q = flowrate in L/hour
    //  lcd.clear();
      lcd.setCursor(0,1);
      lcd.print("F:");
      lcd.print(l_minute);
      lcd.print(" L/M");
       
      l_minute = l_minute/60;
      lcd.setCursor(9,1);
      vol = vol +l_minute;
      lcd.print("Vol:");
      lcd.print(vol);
      lcd.print(" L");
      
      flow_frequency = 0; // Reset Counter
  //    Serial.print(l_minute, DEC); // Print litres/hour
  //    Serial.println(" L/Sec");
    }
    else {
   //   Serial.println(" flow rate = 0 ");
   //   lcd.clear();
      lcd.setCursor(0,1);
      lcd.print("F:");
      lcd.print( flow_frequency );
      lcd.print(" L/M");
      
  //    Serial.print("Rate:");
  //    Serial.print( flow_frequency );
  //    Serial.println("L/M");
      
      lcd.setCursor(9,1);
      lcd.print("Vol:");
      lcd.print(vol);
      lcd.print(" L");
      
      delay(2000);
      ss.print(temperature);
      ss.print(":");     
      ss.print(humidity); 
      ss.print(":"); 
      ss.print(distance);
      ss.print(":");     
      ss.print(vol); 
      ss.print(":"); 
     
    }
   }
}
void gsm_init()
{
    lcd.clear();
    lcd.setCursor(0,0);
    lcd.print("MSG SENDING.....");
    Serial.println("AT");
    delay(1000);  
    Serial.println("ATE0");
    delay(1000); 
    Serial.println("AT+CPIN?");
    delay(1000); 
    Serial.println("AT+CNMI=2,2,0,0,0");
    delay(1000);
    Serial.println("AT+CMGF=1");   
}
void msg1()
{
    //   gsm_init();
       lcd.setCursor(0,1);
       lcd.print("..mobileno..      ");
       lcd.setCursor(0,2);
       lcd.print("WATER LEVEL FULL ");
       Serial.print("AT+CMGS=\"..mobileno..");
       Serial.println("\"");
       delay(1000);
       Serial.println("water level is high,early stage for flood"); 
       Serial.print("Flow:");
       Serial.print(l_minute);
       Serial.println(" L/M");     
       Serial.print("vol:");
       Serial.print(vol);
       Serial.println("L");
       Serial.print("TEMPERATURE:");Serial.println((int)temperature); 
       Serial.print("HUMIDITY:");Serial.println((int)humidity);  
       delay(500);
       Serial.println((char)26);     
       delay(1000);
       lcd.clear();    
}
void msg2()
{
       delay(3000);
       gsm_init();
       lcd.setCursor(0,1);
       lcd.print("..mobileno..      ");
       lcd.setCursor(0,2);
       lcd.print("WATER LEVEL FULL ");
       Serial.print("AT+CMGS=\"..mobileno..");
       Serial.println("\"");
       delay(1000);
       Serial.println("water level is high,early stage for flood2");  
       Serial.print("Flow:");
       Serial.print(l_minute);
       Serial.println(" L/M");     
       Serial.print("vol:");
       Serial.print(vol);
       Serial.println("L");       
       Serial.print("TEMPERATURE:");Serial.println((int)temperature); 
       Serial.print("HUMIDITY:");Serial.println((int)humidity);  
       delay(500);
       Serial.println((char)26);     
       delay(1000);
       lcd.clear(); 
       a=0; 
}
void lcd_decimal3(unsigned char col,unsigned char row,int val)
{
  unsigned int val1,val2,val3,v;
  val1=val/100;
     v=val%100;
  val2=v/10;   
  val3=v%10;

    lcd.setCursor(col,row);
    lcd.write(val1+0x30);
    lcd.setCursor(col+1,row);
    lcd.write(val2+0x30);
    lcd.setCursor(col+2,row);
    lcd.write(val3+0x30);
}